trigger:
- master

pool:
  vmImage: ubuntu-latest


variables:
- name: org_id
  value: "752089912425"
- name: billing_account
  value: "013B19-B6B12E-6CC016"
- name: org_admins
  value: "group_org_admins@gcp-lz-endava.com"
- name: billing_admins
  value: "group_billing_admins@gcp-lz-endava.com"
- name: monitoring_email
  value: "group_org_admins@gcp-lz-endava.com"
- name: region
  value: "europe-west2"
- name: folder_prefix
  value: "grab"
- name: project_prefix
  value: "grab"
- name: parent_folder
  value: "521755815750"
- name: vet_projectid
  value: "azuredevops-orgadmin"
- name: service_account
  value: "prasanna-orgadmin-ado@azuredevops-orgadmin.iam.gserviceaccount.com"
- name: scc
  value: "521755815750"


steps:
- task: DownloadSecureFile@1
  name: grab
  displayName: 'Download credentials.json'
  inputs:
    secureFile: 'grab.json'
    
- script: |
    cd $(Agent.BuildDirectory)/
    cp $(grab.secureFilePath) $(Agent.BuildDirectory)/
    gcloud auth activate-service-account --key-file=$(Agent.BuildDirectory)/grab.json
    export GOOGLE_APPLICATION_CREDENTIALS=$(Agent.BuildDirectory)/grab.json
    rm -rf terraform-example-foundation.tar terraform-example-foundation
    gsutil -m cp gs://grab786/terraform-example-foundation.tar  .
    tar xvf terraform-example-foundation.tar terraform-example-foundation
    echo "Printing current working directory - start of network layer"
    pwd
    ls -ltr
    mkdir -p $(Agent.BuildDirectory)/terraform-example-foundation/credentials
    cp $(GCPCredentials.secureFilePath) $(Agent.BuildDirectory)/terraform-example-foundation/credentials/
    gcloud auth activate-service-account --key-file=$(Agent.BuildDirectory)/terraform-example-foundation/credentials/grab.json
    cd $(Agent.BuildDirectory)/
    export ORGANIZATION_ID=$(terraform -chdir="terraform-example-foundation/0-bootstrap/" output -json common_config | jq '.org_id' --raw-output)
    export ACCESS_CONTEXT_MANAGER_ID=$(gcloud access-context-manager policies list --organization ${ORGANIZATION_ID} --format="value(name)")
    echo "access_context_manager_policy_id = ${ACCESS_CONTEXT_MANAGER_ID}"
    export CLOUD_BUILD_PROJECT_ID=$(terraform -chdir="terraform-example-foundation/0-bootstrap/" output -raw cloudbuild_project_id)
    echo ${CLOUD_BUILD_PROJECT_ID}
    gcloud source repos clone gcp-networks --project=${CLOUD_BUILD_PROJECT_ID}
    cd gcp-networks/
    git config --global user.email "prasanna.veerabhadraiahgcp-lz-endava.com"
    git config --global user.name "Prasanna Veerabhadraiah"
    git checkout -b plan
    cp -RT ../terraform-example-foundation/3-networks-hub-and-spoke/ .
    cp ../terraform-example-foundation/build/cloudbuild-tf-* .
    cp ../terraform-example-foundation/build/tf-wrapper.sh .
    chmod 755 ./tf-wrapper.sh
    mv common.auto.example.tfvars common.auto.tfvars
    mv shared.auto.example.tfvars shared.auto.tfvars
    mv access_context.auto.example.tfvars access_context.auto.tfvars
    export ORGANIZATION_ID=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -json common_config | jq '.org_id' --raw-output)
    export ACCESS_CONTEXT_MANAGER_ID=$(gcloud access-context-manager policies list --organization ${ORGANIZATION_ID} --format="value(name)")
    echo "access_context_manager_policy_id = ${ACCESS_CONTEXT_MANAGER_ID}"
    sed -i "s/ACCESS_CONTEXT_MANAGER_ID/${ACCESS_CONTEXT_MANAGER_ID}/" ./access_context.auto.tfvars
    export backend_bucket=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -raw gcs_bucket_tfstate)
    echo "remote_state_bucket = ${backend_bucket}"
    export NETWORKS_STEP_TERRAFORM_SERVICE_ACCOUNT_EMAIL=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -raw networks_step_terraform_service_account_email)
    echo "terraform_service_account = ${NETWORKS_STEP_TERRAFORM_SERVICE_ACCOUNT_EMAIL}"
    echo '''
    domain = "gcp-lz-endava.com."
    terraform_service_account = "NETWORKS_STEP_TERRAFORM_SERVICE_ACCOUNT_EMAIL"
    remote_state_bucket = "REMOTE_STATE_BUCKET"
    enable_hub_and_spoke_transitivity = true
    ''' > common.auto.tfvars
    sed -i "s/NETWORKS_STEP_TERRAFORM_SERVICE_ACCOUNT_EMAIL/${NETWORKS_STEP_TERRAFORM_SERVICE_ACCOUNT_EMAIL}/" ./common.auto.tfvars
    sed -i "s/REMOTE_STATE_BUCKET/${backend_bucket}/" ./common.auto.tfvars
    cat ./common.auto.tfvars
    git add .
    git commit -m 'Your message'
    export CLOUD_BUILD_PROJECT_ID=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -raw cloudbuild_project_id)
    echo ${CLOUD_BUILD_PROJECT_ID}
    export GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -raw networks_step_terraform_service_account_email)
    echo ${GOOGLE_IMPERSONATE_SERVICE_ACCOUNT}
    ./tf-wrapper.sh init shared
    ./tf-wrapper.sh plan shared
    ./tf-wrapper.sh apply shared
    git push --set-upstream origin plan
    sleep 500
    git checkout -b production
    git push origin production
    sleep 500
    git checkout -b development
    git push origin development
    sleep 500
    git checkout -b non-production
    git push origin non-production
    unset GOOGLE_IMPERSONATE_SERVICE_ACCOUNT
  displayName: 'Running Network layer'

