trigger:
- master

pool:
  #name: 'mac'
  vmImage: ubuntu-latest
variables:
- name: org_id
  value: "752089912425"
- name: billing_account
  value: "013B19-B6B12E-6CC016"
- name: group_billing_admins 
  value: "group_billing_admins@gcp-lz-endava.com"
- name: group_org_admins
  value: "group_org_admins@gcp-lz-endava.com"
- name: default_region
  value:  "europe-west2"
- name: parent_folder
  value: "688014693983"
- name: folder_prefix
  value: "med"
- name: project_prefix 
  value: "ned"
- name: domains_to_allow 
  value: "gcp-lz-endava.com"
- name: essential_contacts_domains_to_allow 
  value: "gcp-lz-endava.com"
- name: billing_data_users 
  value: "group_org_admins@gcp-lz-endava.com"  
- name: audit_data_users
  value: "gcp-security-admins@gcp-lz-endava.com"
- name: scc_notification_name
  value: "688014693983"
- name: enable_hub_and_spoke 
  value: 'true'
- name: create_access_context_manager_access_policy
  value: 'false'
- name: create_unique_tag_key 
  value: 'true'
               
stages:
- stage: MyStage
  
  jobs:
  - job: env
    steps:
    - task: DownloadSecureFile@1
      name: pool_service
      inputs:
        secureFile: 'azuredevops-orgadmin-1d8fd63dcdc4.json'
    
    - script: |
        cd $(Agent.BuildDirectory)/
        cp $(pool_service.secureFilePath) $(Agent.BuildDirectory)/
        gcloud auth activate-service-account --key-file=$(Agent.BuildDirectory)/azuredevops-orgadmin-1d8fd63dcdc4.json
        export GOOGLE_APPLICATION_CREDENTIALS=$(Agent.BuildDirectory)/azuredevops-orgadmin-1d8fd63dcdc4.json
        rm -rf terraform-example-foundation.tar terraform-example-foundation
        gsutil -m cp gs://group786/terraform-example-foundation.tar  .
        tar xvf terraform-example-foundation.tar terraform-example-foundation
        echo "Printing current working directory - start of Environment layer" 
        pwd
        ls -ltr
        mkdir -p $(Agent.BuildDirectory)/terraform-example-foundation/credentials
        cp $(GCPCredentials.secureFilePath) $(Agent.BuildDirectory)/terraform-example-foundation/credentials/
        gcloud auth activate-service-account --key-file=$(Agent.BuildDirectory)/terraform-example-foundation/credentials/credentials.json
        cd $(Agent.BuildDirectory)/
        export CLOUD_BUILD_PROJECT_ID=$(terraform -chdir="terraform-example-foundation/0-bootstrap/" output -raw cloudbuild_project_id)
        echo ${CLOUD_BUILD_PROJECT_ID}
        gcloud source repos clone gcp-environments --project=${CLOUD_BUILD_PROJECT_ID}
        cd gcp-environments
        git config --global user.email "faria.nasir@endava.com"
        git config --global user.name "faria nasir"
        git checkout -b plan

        cp -RT ../terraform-example-foundation/2-environments/ .
        cp ../terraform-example-foundation/build/cloudbuild-tf-* .
        cp ../terraform-example-foundation/build/tf-wrapper.sh .
        chmod 755 ./tf-wrapper.sh
        export backend_bucket=$(terraform -chdir="../terraform-example-foundation/0-bootstrap/" output -raw gcs_bucket_tfstate)
        echo "remote_state_bucket = ${backend_bucket}"
        echo '''
        monitoring_workspace_users = "${{ variables.monitoring_email }}"
        remote_state_bucket = "REMOTE_STATE_BUCKET"
        ''' > terraform.tfvars
        sed -i "s/REMOTE_STATE_BUCKET/${backend_bucket}/" terraform.tfvars
        git add .
        git commit -m 'Your message'
        git push --set-upstream origin plan
        sleep 600
        git checkout -b development
        git push origin development
        sleep 600
        git checkout -b non-production
        git push origin non-production
        sleep 600
        git checkout -b production
        git push origin production
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'envi'
