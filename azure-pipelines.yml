trigger:
- master

pool:
  #name: 'mac'
  vmImage: ubuntu-latest
variables:
- name: org_id
  value: "752089912425"
- name: billing_account
  value: "013B19-B6B12E-6CC016"
- name: group_billing_admins 
  value: "group_billing_admins@gcp-lz-endava.com"
- name: group_org_admins
  value: "group_org_admins@gcp-lz-endava.com"
- name: default_region
  value:  "europe-west2"
- name: parent_folder
  value: "521755815750"
- name: folder_prefix
  value: "grab"
- name: project_prefix 
  value: "grab"
- name: domains_to_allow 
  value: "gcp-lz-endava.com"
- name: monitoring_email
  value: "group_org_admins@gcp-lz-endava.com"  
- name: essential_contacts_domains_to_allow 
  value: "gcp-lz-endava.com"
- name: billing_data_users 
  value: "group_org_admins@gcp-lz-endava.com"  
- name: audit_data_users
  value: "gcp-security-admins@gcp-lz-endava.com"
- name: scc_notification_name
  value: "521755815750"
- name: vet_projectid
  value: "azuredevops-orgadmin"
- name: service_account
  value: "prasanna-orgadmin-ado@azuredevops-orgadmin.iam.gserviceaccount.com"

               
stages:
- stage: MyStage
  
  jobs:
  - job: bootstrap
    steps:
    - task: DownloadSecureFile@1
      name: 'grab'
      inputs:
        secureFile: 'grab.json'
    
    - script: |
          cd $(Agent.BuildDirectory)/
          cp $(grab.secureFilePath) $(Agent.BuildDirectory)/
          gcloud auth activate-service-account --key-file=$(Agent.BuildDirectory)/grab.json
          export GOOGLE_APPLICATION_CREDENTIALS=$(Agent.BuildDirectory)/grab.json
          git clone https://github.com/fariasyed/terraform-example-foundation.git
          gcloud components install beta --quiet
          cd terraform-example-foundation
          cd 0-bootstrap
          mv terraform.example.tfvars terraform.tfvars
          echo '''
          org_id = "${{variables.org_id}}"
          billing_account = "${{variables.billing_account}}"
          group_billing_admins  = "${{variables.group_billing_admins}}" 
          group_org_admins = "${{variables.group_org_admins}}"
          default_region = "${{variables.default_region}}"
          parent_folder = "${{variables.parent_folder}}"
          folder_prefix = "${{variables.folder_prefix}}"
          project_prefix  = "${{variables.project_prefix}}"
          ''' > terraform.tfvars
          terraform init
          terraform plan -input=false -out bootstrap.tfplan
          export VET_PROJECT_ID=A-VALID-PROJECT-ID
          terraform show -json bootstrap.tfplan > bootstrap.json
          gcloud beta terraform vet bootstrap.json --policy-library="../policy-library" --project ${VET_PROJECT_ID}
          terraform apply bootstrap.tfplan
          export network_step_sa=$(terraform output -raw networks_step_terraform_service_account_email)
          export projects_step_sa=$(terraform output -raw projects_step_terraform_service_account_email)
          export projects_gcs_bucket_tfstate=$(terraform output -raw projects_gcs_bucket_tfstate)
          echo "network step service account = ${network_step_sa}"
          echo "projects step service account = ${projects_step_sa}"
          echo "projects gcs bucket tfstate = ${projects_gcs_bucket_tfstate}"
          export cloudbuild_project_id=$(terraform output -raw cloudbuild_project_id)
          echo "cloud build project ID = ${cloudbuild_project_id}"
          export backend_bucket=$(terraform output -raw gcs_bucket_tfstate)
          echo "backend_bucket = ${backend_bucket}"
          export backend_bucket_projects=$(terraform output -raw projects_gcs_bucket_tfstate)
          echo "backend_bucket_projects = ${backend_bucket_projects}"
          cp backend.tf.example backend.tf
          cd ..
          for i in `find -name 'backend.tf'`; do sed -i "s/UPDATE_ME/${backend_bucket}/" $i; done
          for i in `find -name 'backend.tf'`; do sed -i "s/UPDATE_PROJECTS_BACKEND/${backend_bucket_projects}/" $i; done
          cd 0-bootstrap
          terraform init -force-copy
          cd ../..
          gcloud source repos clone gcp-bootstrap --project=${cloudbuild_project_id}
          cd gcp-bootstrap
          git config --global user.email "faria.nasir@gcp-lz-endava.com"
          git config --global user.name "faria nasir"
          git checkout -b production
          cp -RT ../terraform-example-foundation/0-bootstrap/ .
          git add .
          git commit -m 'Initialize bootstrap'
          git push --set-upstream origin production
          cd $(Agent.BuildDirectory)/
          tar cvf terraform-example-foundation.tar terraform-example-foundation
          gsutil -m cp terraform-example-foundation.tar gs://grab786/
          rm -rf  terraform-example-foundation.tar terraform-example-foundation
      workingDirectory:  $(Agent.BuildDirectory)/
      displayName: 'bootstrap' 
  
